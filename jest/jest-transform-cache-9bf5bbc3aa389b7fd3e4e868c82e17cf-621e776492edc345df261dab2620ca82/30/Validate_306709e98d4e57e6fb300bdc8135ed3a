"use strict";Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}var Validate = function () {function Validate() {_classCallCheck(this, Validate);}_createClass(Validate, null, [{ key: "isAlphaNumeric", value: function isAlphaNumeric(
        str) {
            if (/^(?=.*[a-zA-Z])(?=.*[0-9])[a-zA-Z0-9]+$/.test(str)) {
                return true;
            }
            throw new Error(str + " does not alphanumeric");
        } }, { key: "isValidLength", value: function isValidLength(

        str, maxLength) {
            if (str.length >= maxLength) {
                return true;
            }
            throw new Error(str + " must be at least " + maxLength + " character/s");
        } }, { key: "isFirstCharUppercase", value: function isFirstCharUppercase(

        str) {
            if (str[0] === str[0].toUpperCase()) {
                return true;
            }
            throw new Error("The first character must be uppercase");
        } }]);return Validate;}();exports.default = Validate;